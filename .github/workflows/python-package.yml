# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

env:
  FORCE_COLOR: "1"  # Tox output is colorless by default
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  build:
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version-default

      - name: Set up JDK 11 x64
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Install Dependencies
        run: |
          python -m pip install -U pip
          python -m pip install setuptools wheel
          python -m pip install -r requirements_build.txt

      - name: Build Files from FhY Grammar
        run: ./build_grammar.sh

      - name: Save Parser Files
        uses: actions/upload-artifact@v4
        with:
          name: parser-files
          path: src/fhy/lang/parser/FhY*.py
          retention-days: 1
          if-no-files-found: ignore

  style:
    runs-on: "ubuntu-latest"
    needs: [build]
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Built Parser Files
        uses: actions/download-artifact@v4
        with:
          name: parser-files
          path: src/fhy/lang/parser/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version-default

      - name: Set up JDK 11 x64
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Install tox
        run: |
          python -m pip install -U pip
          python -m pip install setuptools wheel
          pip install tox

      - name: Code Linting & Formatting
        if: always()
        run: tox -e lint

      - name: Static Type Safety Check
        if: always()
        run: tox -e type

      - name: Documentation Build
        run: tox -e docs

  tests:
    runs-on: ${{ matrix.os }}
    needs: [build]
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]
        os: [ubuntu-latest, macOS-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Built Parser Files
        uses: actions/download-artifact@v4
        with:
          name: parser-files
          path: src/fhy/lang/parser/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up JDK 11 x64
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 11

      - name: Install tox
        run: |
          python -m pip install -U pip
          python -m pip install setuptools wheel
          pip install tox

      - name: Setup Tox Python Version (${{ matrix.os }})
        if: matrix.os != 'windows-latest'
        run: |
            echo "TOX_VERSION=py$(echo ${{ matrix.python-version }} | tr -d .)-tests" >> $GITHUB_ENV

      - name: Setup Tox Python Version (${{ matrix.os }})
        if: matrix.os == 'windows-latest'
        run: |
          "TOX_VERSION=py$(echo ${{ matrix.python-version }} | tr -d .)-tests" >> $env:GITHUB_ENV

      - name: PyTest
        run: |
          echo ${{ env.TOX_VERSION }}
          tox -e ${{ env.TOX_VERSION }}

      - name: Save Coverage Data Temporarily
        uses: actions/upload-artifact@v4
        with:
          name: coverage-data-${{ matrix.os }}-${{ matrix.python-version }}
          path: .coverage.*
          retention-days: 1
          if-no-files-found: ignore

  coverage:
    runs-on: "ubuntu-latest"
    needs: [build, tests]
    strategy:
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Built Parser Files
        uses: actions/download-artifact@v4
        with:
          name: parser-files
          path: src/fhy/lang/parser/

      - name: Download coverage data
        uses: actions/download-artifact@v4
        with:
          pattern: coverage-data-*
          merge-multiple: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: .python-version-default

      - name: Install tox
        run: |
          python -m pip install -U pip
          python -m pip install setuptools wheel
          pip install tox

      - name: Report Testing Coverage
        run: |
          tox -e coverage | tee $GITHUB_STEP_SUMMARY
