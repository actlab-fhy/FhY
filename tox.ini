[tox]
envlist = lint, type, coverage, docs, py{311, 312, 313}

[testenv]
description = Run Unit Tests
extras = test
set_env =
    COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
commands_pre =
    python -c 'import pathlib; pathlib.Path("{env_site_packages_dir}/cov.pth").write_text("import coverage; coverage.process_startup()")'
commands = 
    python --version
    coverage run -m pytest {posargs}

[testenv:coverage]
description = Report Code Coverage
skip_install = true
parallel_show_output = true
deps = coverage
depends = py{311, 312, 313}
commands =
    python --version
    coverage combine
    coverage report

[testenv:lint]
description = Run Code Linters
extras = lint
commands = 
    python --version
    ruff check --config pyproject.toml {posargs: src}
    ruff format --check --config pyproject.toml {posargs: src}
    pylint --rcfile pyproject.toml {posargs: src}

[testenv:type]
description = Static Type Analysis
extras = type
commands = 
    python --version
    mypy --config-file pyproject.toml {posargs: src}

[testenv:docs]
description = Confirm doc build
extras = docs
commands = 
    python --version
    sphinx-build -n -T -W -b html -d {envtmpdir}/_build/doctrees docs/source {envtmpdir}/_build/html
