[tox]
envlist = lint, type, coverage, docs, py{311, 312}-tests

[testenv]
description = Run Unit Tests
extras = test
set_env =
    COVERAGE_PROCESS_START={toxinidir}/pyproject.toml
commands_pre =
    {envpython} --version
commands = 
    coverage run -m pytest {posargs}

[testenv:py{311, 312}-tests]
commands_pre =
    {envpython} --version
    python -c 'import pathlib; pathlib.Path("{env_site_packages_dir}/cov.pth").write_text("import coverage; coverage.process_startup()")'

[testenv:coverage]
description = Report Code Coverage
skip_install = true
deps = coverage
parallel_show_output = true
depends = py{311, 312}-tests
commands =
    coverage combine
    coverage report {posargs}

[testenv:lint]
description = Run Code Linters
extras = lint
commands =
    ruff check --config pyproject.toml {posargs: src}
    ruff format --check --config pyproject.toml {posargs: src}
    pylint --rcfile pyproject.toml {posargs: src}

[testenv:type]
description = Static Type Analysis
extras = type
commands =
    mypy --config-file pyproject.toml {posargs: src}

[testenv:docs]
description = Build Docs
extras = docs
commands =
    sphinx-build -n -T -W -b html -d {envtmpdir}/_build/doctrees docs/source {envtmpdir}/_build/html
